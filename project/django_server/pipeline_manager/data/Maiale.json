{
    "creation_date": "2018-07-27T09:27:36.875Z",
    "creation_epoch": 1532683656,
    "creator": "Tiziano Flati",
    "description": "",
    "id": "Maiale",
    "img": "imgs/project.png",
    "pipelines": [
        {
            "cluster": "galileo",
            "color": "#ffc433",
            "disabled": false,
            "id": "TransPE_Sus_scrofa",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.fastq"
                        }
                    ],
                    "command_chunk_size": 10,
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "ln -s /gpfs/work/IscrC_TRAGEP/${SAMPLE}_R1_001.fastq.gz ${SAMPLE}_R1_001.fastq.gz\nln -s /gpfs/work/IscrC_TRAGEP/${SAMPLE}_R2_001.fastq.gz ${SAMPLE}_R2_001.fastq.gz",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_R1_001.fastq.gz -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_R2_001.fastq.gz -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.trimmed.paired.fastq"
                        },
                        {
                            "file": "${SAMPLE}_2.trimmed.paired.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_R1_001.fastq.gz ${SAMPLE}_R2_001.fastq.gz ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.trimmed.paired.fastq ] && [ -s ${SAMPLE}_2.trimmed.paired.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${sample_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_R1_001.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_R2_001.fastq -o fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/susScr11/genome -1 ${SAMPLE}_1.trimmed.paired.fastq -2 ${SAMPLE}_2.trimmed.paired.fastq -U ${SAMPLE}_1.trimmed.unpaired.fastq,${SAMPLE}_2.trimmed.unpaired.fastq -S $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "hisat_err",
                        "job_name": "hisat-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "hisat_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "hisat2/2.1.0"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "samtools/1.7"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat samples); do echo \"INPUT=$s/$s.bam\"; done)",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "",
                        "job_name": "mergebams-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "MergeBams",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $EXPERIMENT.gtf",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "executables": [],
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "StringTieMerge",
                            "MergeBams"
                        ],
                        "error": "stringtiemergeEB_err",
                        "job_name": "stringtieEB",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemergeEB_out",
                        "queue": "gll_usr_prod",
                        "walltime": "01:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "stringtie/1.3.4",
                        "ig_Sus_scrofa/Sscrofa11.1"
                    ],
                    "script_level": "experiment",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieEB",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "begin_block": "",
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "if [ ! -s prepDE.py ]\nthen\n    wget http://ccb.jhu.edu/software/stringtie/dl/prepDE.py\nfi\n\nrm input.list.txt\nfor EXPERIMENT in $(cat experiments); do echo -e \"$EXPERIMENT\\t$EXPERIMENT/${EXPERIMENT}.gtf\" >> input.list.txt; done\npython prepDE.py -i input.list.txt -g gene_count_matrix.csv -t transcript_count_matrix.csv",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "end_block": "",
                    "executable": [],
                    "executables": [],
                    "hpc_directives": {
                        "account": "",
                        "cpu": 1,
                        "dependencies": [
                            "StringTieEB"
                        ],
                        "error": "DESeq2_err",
                        "job_name": "DESeq2",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "DESeq2_out",
                        "queue": "",
                        "walltime": "01:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "r/3.4.2"
                    ],
                    "overwrite": true,
                    "script_level": "project",
                    "skip": false,
                    "title": "CountMatrixGenerator",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "PE",
                    "type": "Layout"
                },
                {
                    "name": "Sus scrofa",
                    "type": "Organism"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to this project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                }
            ]
        }
    ],
    "projects": [
        {
            "disabled": false,
            "experiments": [
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo1_ATCACG",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo1",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo2_TTAGGC",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo2",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo3_ACTTGA",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo3",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo4_GATCAG",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo4",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo5_TAGCTT",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo5",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo6_GGCTAC",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo6",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo7_GTGGCC",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo7",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo8_GTTTCG",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo8",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo9_CGTACG",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo9",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo10_GAGTGG",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo10",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo11_ACTGAT",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo11",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "basedir": "",
                        "cluster": "",
                        "create_per_sample_directory": true,
                        "genome": "",
                        "pairedend": true,
                        "sample_ids": [
                            {
                                "id": "Muscolo12_ATTCCT",
                                "type": "run"
                            }
                        ],
                        "tags": [
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Sus scrofa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "Muscolo12",
                    "type": "experiment"
                }
            ],
            "id": "Sus_scrofa",
            "papers": [],
            "pipelines": [
                {
                    "cluster": "galileo",
                    "color": "#ffc433",
                    "disabled": false,
                    "id": "TransPE_Sus_scrofa",
                    "steps": [
                        {
                            "checks": [
                                {
                                    "file": "${SAMPLE}_1.fastq"
                                }
                            ],
                            "command_chunk_size": 10,
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "ln -s /gpfs/work/IscrC_TRAGEP/${SAMPLE}_R1_001.fastq.gz ${SAMPLE}_R1_001.fastq.gz\nln -s /gpfs/work/IscrC_TRAGEP/${SAMPLE}_R2_001.fastq.gz ${SAMPLE}_R2_001.fastq.gz",
                            "conditions": [
                                {
                                    "command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 1,
                                "dependencies": [],
                                "error": "download_err",
                                "job_name": "download-${experiment_variable}",
                                "memory": {
                                    "quantity": 10,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "download_out",
                                "queue": "gll_usr_prod",
                                "walltime": "05:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": false,
                            "modules": [],
                            "script_level": "project",
                            "sequential": false,
                            "skip": false,
                            "title": "Download",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "checks": [
                                {
                                    "file": "fastqc_before"
                                }
                            ],
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_R1_001.fastq.gz -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_R2_001.fastq.gz -o fastqc_before",
                            "conditions": [
                                {
                                    "command": "[ -d fastqc_before ]"
                                }
                            ],
                            "description": "",
                            "description_short": "Quality control",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 1,
                                "dependencies": [
                                    "Download"
                                ],
                                "error": "fastqc_err",
                                "job_name": "fastqc_before-${project_variable}",
                                "memory": {
                                    "quantity": 10,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "fastqc_out",
                                "queue": "gll_usr_prod",
                                "walltime": "02:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": false,
                            "modules": [
                                "profile/bioinf",
                                "fastqc/0.11.5"
                            ],
                            "script_level": "project",
                            "sequential": false,
                            "skip": false,
                            "title": "Fastqc_before",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "checks": [
                                {
                                    "file": "${SAMPLE}_1.trimmed.paired.fastq"
                                },
                                {
                                    "file": "${SAMPLE}_2.trimmed.paired.fastq"
                                }
                            ],
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_R1_001.fastq.gz ${SAMPLE}_R2_001.fastq.gz ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                            "conditions": [
                                {
                                    "command": "[ -s ${SAMPLE}_1.trimmed.paired.fastq ] && [ -s ${SAMPLE}_2.trimmed.paired.fastq ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 36,
                                "dependencies": [
                                    "Download"
                                ],
                                "error": "trimmomatic_err",
                                "job_name": "trimming-${sample_variable}",
                                "memory": {
                                    "quantity": 30,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "trimmomatic_out",
                                "queue": "gll_usr_prod",
                                "walltime": "02:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": false,
                            "modules": [
                                "profile/bioinf",
                                "trimmomatic/0.36"
                            ],
                            "script_level": "sample",
                            "sequential": false,
                            "skip": false,
                            "title": "Trimming",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "checks": [
                                {
                                    "file": "fastqc_after"
                                }
                            ],
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_R1_001.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_R2_001.fastq -o fastqc_after",
                            "conditions": [
                                {
                                    "command": "[ -d fastqc_after ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 1,
                                "dependencies": [
                                    "Trimming"
                                ],
                                "error": "fastqc_after_err",
                                "job_name": "fastqc_after-${project_variable}",
                                "memory": {
                                    "quantity": 10,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "fastqc_after_out",
                                "queue": "gll_usr_prod",
                                "walltime": "00:15:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": false,
                            "modules": [
                                "profile/bioinf",
                                "fastqc/0.11.5"
                            ],
                            "script_level": "project",
                            "sequential": false,
                            "skip": false,
                            "title": "Fastqc_after",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "checks": [
                                {
                                    "file": "$SAMPLE.sam"
                                }
                            ],
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/susScr11/genome -1 ${SAMPLE}_1.trimmed.paired.fastq -2 ${SAMPLE}_2.trimmed.paired.fastq -U ${SAMPLE}_1.trimmed.unpaired.fastq,${SAMPLE}_2.trimmed.unpaired.fastq -S $SAMPLE.sam",
                            "conditions": [
                                {
                                    "command": "[ -s $SAMPLE.sam ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 36,
                                "dependencies": [
                                    "Trimming"
                                ],
                                "error": "hisat_err",
                                "job_name": "hisat-${sample_variable}",
                                "memory": {
                                    "quantity": 115,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "hisat_out",
                                "queue": "gll_usr_prod",
                                "walltime": "05:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": false,
                            "modules": [
                                "profile/bioinf",
                                "hisat2/2.1.0"
                            ],
                            "script_level": "sample",
                            "sequential": false,
                            "skip": false,
                            "title": "Mapping",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "command_group_level": "all",
                            "command_level": "sample",
                            "command_parallelism_level": "sequential",
                            "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                            "conditions": [
                                {
                                    "command": "[ -s $SAMPLE.bam ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 36,
                                "dependencies": [
                                    "Mapping"
                                ],
                                "error": "sort_err",
                                "job_name": "sort-${sample_variable}",
                                "memory": {
                                    "quantity": 115,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "sort_out",
                                "queue": "gll_usr_prod",
                                "walltime": "03:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": true,
                            "modules": [
                                "profile/bioinf",
                                "samtools/1.7"
                            ],
                            "script_level": "sample",
                            "sequential": true,
                            "skip": false,
                            "title": "Sorting",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "checks": [],
                            "command_chunk_size": 1,
                            "command_group_level": "all",
                            "command_level": "experiment",
                            "command_parallelism_level": "sequential",
                            "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat samples); do echo \"INPUT=$s/$s.bam\"; done)",
                            "conditions": [
                                {
                                    "command": "[ -s $EXPERIMENT.bam ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 36,
                                "dependencies": [
                                    "Sorting"
                                ],
                                "error": "",
                                "job_name": "mergebams-${experiment_variable}",
                                "memory": {
                                    "quantity": 115,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "",
                                "queue": "gll_usr_prod",
                                "walltime": "02:00:00"
                            },
                            "hpc_directives_text": "",
                            "modules": [
                                "profile/global",
                                "picardtools/2.3.0"
                            ],
                            "script_level": "experiment",
                            "skip": false,
                            "title": "MergeBams",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "command_group_level": "all",
                            "command_level": "experiment",
                            "command_parallelism_level": "sequential",
                            "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $EXPERIMENT.gtf",
                            "conditions": [
                                {
                                    "command": "[ -s $EXPERIMENT.gtf ]"
                                }
                            ],
                            "description": "",
                            "description_short": "",
                            "executables": [],
                            "hpc_directives": {
                                "account": "cin_staff",
                                "cpu": 36,
                                "dependencies": [
                                    "StringTieMerge",
                                    "MergeBams"
                                ],
                                "error": "stringtiemergeEB_err",
                                "job_name": "stringtieEB",
                                "memory": {
                                    "quantity": 115,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "stringtiemergeEB_out",
                                "queue": "gll_usr_prod",
                                "walltime": "01:00:00"
                            },
                            "hpc_directives_text": "",
                            "iterate": true,
                            "modules": [
                                "profile/bioinf",
                                "stringtie/1.3.4",
                                "ig_Sus_scrofa/Sscrofa11.1"
                            ],
                            "script_level": "experiment",
                            "sequential": true,
                            "skip": false,
                            "title": "StringTieEB",
                            "type": "per-sample",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        },
                        {
                            "begin_block": "",
                            "checks": [],
                            "command_chunk_size": 1,
                            "command_group_level": "all",
                            "command_level": "project",
                            "command_parallelism_level": "sequential",
                            "commandline": "if [ ! -s prepDE.py ]\nthen\n    wget http://ccb.jhu.edu/software/stringtie/dl/prepDE.py\nfi\n\nrm input.list.txt\nfor EXPERIMENT in $(cat experiments); do echo -e \"$EXPERIMENT\\t$EXPERIMENT/${EXPERIMENT}.gtf\" >> input.list.txt; done\npython prepDE.py -i input.list.txt -g gene_count_matrix.csv -t transcript_count_matrix.csv",
                            "conditions": [],
                            "description": "",
                            "description_short": "",
                            "end_block": "",
                            "executable": [],
                            "executables": [],
                            "hpc_directives": {
                                "account": "",
                                "cpu": 1,
                                "dependencies": [
                                    "StringTieEB"
                                ],
                                "error": "DESeq2_err",
                                "job_name": "DESeq2",
                                "memory": {
                                    "quantity": 10,
                                    "size": "GB"
                                },
                                "mpi_procs": 0,
                                "nodes": 1,
                                "output": "DESeq2_out",
                                "queue": "",
                                "walltime": "01:00:00"
                            },
                            "hpc_directives_text": "",
                            "modules": [
                                "profile/global",
                                "r/3.4.2"
                            ],
                            "overwrite": true,
                            "script_level": "project",
                            "skip": false,
                            "title": "CountMatrixGenerator",
                            "write_stderr_log": true,
                            "write_stdout_log": true
                        }
                    ],
                    "tags": [
                        {
                            "name": "PE",
                            "type": "Layout"
                        },
                        {
                            "name": "Sus scrofa",
                            "type": "Organism"
                        }
                    ],
                    "variables": [
                        {
                            "description": "Variable to use across scripts to refer to a sample in this project",
                            "key": "sample_variable",
                            "key_disabled": true,
                            "value": "SAMPLE"
                        },
                        {
                            "description": "Variable to use across scripts to refer to ALL samples in this project",
                            "key": "all_samples_variable",
                            "key_disabled": true,
                            "value": "ALL_SAMPLES"
                        },
                        {
                            "description": "Variable to use across scripts to refer to this project ID",
                            "key": "project_variable",
                            "key_disabled": true,
                            "value": "PROJECT"
                        },
                        {
                            "description": "Variable to use across scripts to refer to the experiment ID",
                            "key": "experiment_variable",
                            "key_disabled": true,
                            "value": "EXPERIMENT"
                        },
                        {
                            "description": "Variable to use across scripts to refer to the index of this project",
                            "key": "project_index_variable",
                            "key_disabled": true,
                            "value": "PROJECT_INDEX"
                        },
                        {
                            "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                            "key": "cpu_variable",
                            "key_disabled": true,
                            "value": "CPU"
                        },
                        {
                            "description": "Variable to use across scripts to refer to the name of the step",
                            "key": "step_name_variable",
                            "key_disabled": true,
                            "value": "STEP_NAME"
                        }
                    ]
                }
            ],
            "size": 0,
            "tags": [
                {
                    "name": "PE",
                    "type": "Layout"
                },
                {
                    "name": "Sus scrofa",
                    "type": "Organism"
                }
            ],
            "type": "bioproject"
        }
    ],
    "size": 0,
    "subtitle": "",
    "title": "Sus_scrofa",
    "type": "project"
}