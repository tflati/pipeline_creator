{
    "creation_date": "2018-07-19T07:31:10.345Z",
    "creation_epoch": 1531985470,
    "creator": "TF",
    "description": "",
    "id": "TestGenPipe",
    "img": "imgs/project.png",
    "pipelines": [
        {
            "cluster": "galileo",
            "color": "#ffc433",
            "disabled": false,
            "id": "TransPE_Plants",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.fastq"
                        }
                    ],
                    "command_chunk_size": 10,
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "fastq-dump --split-files $SAMPLE",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "sra/2.8.2"
                    ],
                    "script_level": "experiment",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.trimmed.paired.fastq"
                        },
                        {
                            "file": "${SAMPLE}_2.trimmed.paired.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_1.fastq ${SAMPLE}_2.fastq ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 LEADING:3 TRAILING:3",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.trimmed.paired.fastq ] && [ -s ${SAMPLE}_2.trimmed.paired.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${sample_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "bwa mem -t ${cpu_variable} -M $REFERENCE ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_2.trimmed.paired.fastq > ${SAMPLE}.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "bwa_err",
                        "job_name": "bwa-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "bwa_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "bwa/0.7.17"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": false
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=${SAMPLE}_dir/tmp\njava -Xmx2g -Djava.io.tmpdir=$TMP -jar $PICARDTOOLS_HOME/bin/picard.jar SortSam I=${SAMPLE}.sam O=${SAMPLE}_sorted.bam SO=coordinate",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_sorted.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat samples); do echo \"INPUT=$s/${s}_sorted.bam\"; done)",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "mergebam.err",
                        "job_name": "mergebams-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "mergebam.out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "MergeBams",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp/\"\nmkdir $TMP\njava -Xmx2g -Djava.io.tmpdir=$TMP \\\n    -jar $PICARDTOOLS_HOME/bin/picard.jar AddOrReplaceReadGroups \\\n    I=$EXPERIMENT.bam \\\n    O=$EXPERIMENT.dedupAdd.bam \\\n    RGID=$EXPERIMENT \\\n    RGLB=lib1 \\\n    RGPL=illumina \\\n    RGPU=unit1 \\\n    RGSM=$EXPERIMENT",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.dedupAdd.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "MergeBams"
                        ],
                        "error": "addorreplace-err",
                        "job_name": "AddOrReplace-${experiment_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "addorreplace-out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "AddOrReplaceReadGroups",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp/\"\njava -Xmx2g -Djava.io.tmpdir=$TMP -jar $PICARDTOOLS_HOME/bin/picard.jar BuildBamIndex I=$EXPERIMENT.dedupAdd.bam",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.dedupAdd.bai ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "AddOrReplaceReadGroups"
                        ],
                        "error": "index-err",
                        "job_name": "Index-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "index-out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:30:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "Indexing",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp\"\njava -Djava.io.tmpdir=$TMP -Xmx32G -Xms4G \\\n\t-jar $GATK_HOME/GenomeAnalysisTK.jar \\\n\t-T HaplotypeCaller \\\n\t-R $REFERENCE \\\n\t-I $EXPERIMENT.dedupAdd.bam \\\n\t--emitRefConfidence GVCF \\\n\t--variant_index_type LINEAR \\\n\t--variant_index_parameter 128000 \\\n\t-nct ${cpu_variable} \\\n\t-o $EXPERIMENT.g.vcf",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.g.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Indexing"
                        ],
                        "error": "hapcall-err",
                        "job_name": "HapCall-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": null,
                        "nodes": 1,
                        "output": "hapcall-out",
                        "queue": "gll_usr_prod",
                        "walltime": "04:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "HaplotypeCaller",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "echo $EXPERIMENT/$EXPERIMENT.g.vcf >> ../vcf_list.list",
                    "conditions": [
                        {
                            "command": "[ -s vcf_list.list ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "HaplotypeCaller"
                        ],
                        "error": "prepare_err",
                        "job_name": "prepare-${project_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "prepare_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:01:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "PrepareGenotypeGVCF",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp\"\njava -Djava.io.tmpdir=$TMP -Xmx32G \\\n    -jar $GATK_HOME/GenomeAnalysisTK.jar \\\n    -T GenotypeGVCFs \\\n    -R $REFERENCE \\\n    -V vcf_list.list \\\n    -stand_call_conf 30 \\\n    -stand_emit_conf 10 \\\n    -nt 10 \\\n    -o Combined.vcf",
                    "conditions": [
                        {
                            "command": "[ -s Combined.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 10,
                        "dependencies": [
                            "PrepareGenotypeGVCF"
                        ],
                        "error": "genotype_err",
                        "job_name": "genotype-${project_variable}",
                        "memory": {
                            "quantity": 35,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "genotype_out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "GenotypeGVCF",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $GATK_HOME/GenomeAnalysisTK.jar \\\n    -T SelectVariants \\\n    -R $REFERENCE \\\n    -V Combined.vcf \\\n    -selectType SNP \\\n    -o raw_snps.vcf",
                    "conditions": [
                        {
                            "command": "[ -s raw_snps.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "GenotypeGVCF"
                        ],
                        "error": "SNPextraction.err",
                        "job_name": "SNPextraction-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "SNPextraction.out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "project",
                    "skip": false,
                    "title": "SNPextraction",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $GATK_HOME/GenomeAnalysisTK.jar \\\n    -T SelectVariants \\\n    -R $REFERENCE\\\n    -V Combined.vcf \\\n    -selectType INDEL \\\n    -o raw_indels.vcf",
                    "conditions": [
                        {
                            "command": "[ -s raw_indels.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "GenotypeGVCF"
                        ],
                        "error": "INDELSextraction.err",
                        "job_name": "INDELSextraction-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "INDELSextraction.out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "project",
                    "skip": false,
                    "title": "INDELSextraction",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp_snps\"\njava -Djava.io.tmpdir=$TMP -Xmx32G \\\n    -jar $GATK_HOME/GenomeAnalysisTK.jar \\\n    -T VariantFiltration \\\n    -R $REFERENCE \\\n    -V raw_snps.vcf \\\n    --filterExpression \"QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0\" \\\n    --filterName \"my_snp_filter\" \\\n    -o Combined_snps_filt.vcf",
                    "conditions": [
                        {
                            "command": "[ -s Combined_snps_filt.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "SNPextraction"
                        ],
                        "error": "SNPfiltering.err",
                        "job_name": "SNPfiltering-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "SNPfiltering.out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "project",
                    "skip": false,
                    "title": "SNPfiltering",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "TMP=\"tmp_indels\"\njava -Djava.io.tmpdir=$TMP -Xmx32G \\\n    -jar $GATK_HOME/GenomeAnalysisTK.jar \\\n    -T VariantFiltration \\\n    -R $REFERENCE \\\n    -V raw_indels.vcf \\\n    --filterExpression \"QD < 2.0 || FS > 200.0 || ReadPosRankSum < -20.0 || InbreedingCoeff < -0.8 || SOR > 10\" \\\n    --filterName \"my_snp_filter\" \\\n    -o Combined_indels_filt.vcf",
                    "conditions": [
                        {
                            "command": "[ -s Combined_indels_filt.vcf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "INDELSextraction"
                        ],
                        "error": "INDELSfiltering.err",
                        "job_name": "INDELSfiltering-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "INDELSfiltering.out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "gatk/3.6"
                    ],
                    "script_level": "project",
                    "skip": false,
                    "title": "INDELSfiltering",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "PE",
                    "type": "Layout"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to this project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                },
                {
                    "description": "Variable to use across scripts to refer to the REFERENCE genome",
                    "key": "REFERENCE",
                    "value": "/gpfs/work/cin_staff/tcastign/pioppo/Populus_trichocarpa/genome/GCF_000002775.4_Pop_tri_v3_genomic.fna"
                }
            ]
        }
    ],
    "projects": [
        {
            "experiments": [
                {
                    "dataset": {
                        "attributes": {
                            "BioSampleModel": "MIGS.eu",
                            "biome": "missing",
                            "collection_date": "not collected",
                            "env_package": "missing",
                            "estimated_size": "missing",
                            "feature": "missing",
                            "geo_loc_name": "missing",
                            "investigation_type": "eukaryote",
                            "isol_growth_condt": "missing",
                            "lat_lon": "not collected",
                            "material": "missing",
                            "num_replicons": "missing",
                            "ploidy": "missing",
                            "project_name": "Populus trichocarpa Besc-435",
                            "propagation": "missing",
                            "ref_biomaterial": "missing",
                            "strain": "Besc-435"
                        },
                        "bioproject_id": "PRJNA256696",
                        "biosample_id": "SAMN02946257",
                        "genome": "Populus trichocarpa",
                        "pairedend": true,
                        "platform": "Illumina HiSeq 2000",
                        "sample_ids": [
                            {
                                "id": "SRR3709214",
                                "type": "run"
                            }
                        ],
                        "size": 2791384805,
                        "study": {
                            "abstract": "Poplar resequencing Part 2 BESC",
                            "title": "Populus trichocarpa strain:Besc-435 Genome sequencing",
                            "type": "Whole Genome Sequencing"
                        },
                        "tags": [
                            {
                                "name": "Illumina HiSeq 2000",
                                "type": "Platform"
                            },
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Populus trichocarpa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "SRX1869526",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "attributes": {
                            "BioSampleModel": "MIGS.eu",
                            "biome": "missing",
                            "collection_date": "not collected",
                            "env_package": "missing",
                            "estimated_size": "missing",
                            "feature": "missing",
                            "geo_loc_name": "missing",
                            "investigation_type": "eukaryote",
                            "isol_growth_condt": "missing",
                            "lat_lon": "not collected",
                            "material": "missing",
                            "num_replicons": "missing",
                            "ploidy": "missing",
                            "project_name": "Populus trichocarpa Besc-435",
                            "propagation": "missing",
                            "ref_biomaterial": "missing",
                            "strain": "Besc-435"
                        },
                        "bioproject_id": "PRJNA256696",
                        "biosample_id": "SAMN02946257",
                        "genome": "Populus trichocarpa",
                        "pairedend": true,
                        "platform": "Illumina HiSeq 2000",
                        "sample_ids": [
                            {
                                "id": "SRR3709213",
                                "type": "run"
                            }
                        ],
                        "size": 9358675890,
                        "study": {
                            "abstract": "Poplar resequencing Part 2 BESC",
                            "title": "Populus trichocarpa strain:Besc-435 Genome sequencing",
                            "type": "Whole Genome Sequencing"
                        },
                        "tags": [
                            {
                                "name": "Illumina HiSeq 2000",
                                "type": "Platform"
                            },
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Populus trichocarpa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "SRX1869525",
                    "type": "experiment"
                },
                {
                    "dataset": {
                        "attributes": {
                            "BioSampleModel": "MIGS.eu",
                            "biome": "missing",
                            "collection_date": "not collected",
                            "env_package": "missing",
                            "estimated_size": "missing",
                            "feature": "missing",
                            "geo_loc_name": "missing",
                            "investigation_type": "eukaryote",
                            "isol_growth_condt": "missing",
                            "lat_lon": "not collected",
                            "material": "missing",
                            "num_replicons": "missing",
                            "ploidy": "missing",
                            "project_name": "Populus trichocarpa Besc-435",
                            "propagation": "missing",
                            "ref_biomaterial": "missing",
                            "strain": "Besc-435"
                        },
                        "bioproject_id": "PRJNA256696",
                        "biosample_id": "SAMN02946257",
                        "genome": "Populus trichocarpa",
                        "pairedend": true,
                        "platform": "Illumina HiSeq 2000",
                        "sample_ids": [
                            {
                                "id": "SRR1592619",
                                "type": "run"
                            },
                            {
                                "id": "SRR1592620",
                                "type": "run"
                            }
                        ],
                        "size": 12150058671,
                        "study": {
                            "abstract": "Poplar resequencing Part 2 BESC",
                            "title": "Populus trichocarpa strain:Besc-435 Genome sequencing",
                            "type": "Whole Genome Sequencing"
                        },
                        "tags": [
                            {
                                "name": "Illumina HiSeq 2000",
                                "type": "Platform"
                            },
                            {
                                "name": "PE",
                                "type": "Layout"
                            },
                            {
                                "name": "Populus trichocarpa",
                                "type": "Organism"
                            }
                        ]
                    },
                    "id": "SRX716956",
                    "type": "experiment"
                }
            ],
            "id": "PRJNA256696",
            "tags": [
                {
                    "name": "Illumina HiSeq 2000",
                    "type": "Platform"
                },
                {
                    "name": "PE",
                    "type": "Layout"
                },
                {
                    "name": "Populus trichocarpa",
                    "type": "Organism"
                }
            ],
            "type": "bioproject"
        }
    ],
    "subtitle": "",
    "title": "GenPipe",
    "type": "project"
}