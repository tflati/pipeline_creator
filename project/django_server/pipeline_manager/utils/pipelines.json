{
	"pipelines": [
        {
            "cluster": "galileo",
            "color": "#333fff",
            "disabled": false,
            "id": "TransSE_Mus",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.fastq"
                        }
                    ],
                    "command_chunk_size": 10,
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "fastq-dump $SAMPLE",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "sra/2.8.2"
                    ],
                    "script_level": "experiment",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract $SAMPLE.fastq -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.trim.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar SE -threads 36 -phred33 $SAMPLE.fastq $SAMPLE.trim.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-SE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.trim.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${sample_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE/fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract $SAMPLE.trim.fastq -o fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/mm10/genome -U $SAMPLE.trim.fastq -S $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "hisat_err",
                        "job_name": "hisat-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "hisat_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "hisat2/2.1.0"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "samtools/1.7"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat samples); do echo \"INPUT=$s/$s.bam\"; done)",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "",
                        "job_name": "mergebams-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "MergeBams",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie  -v -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $EXPERIMENT.gtf -l $EXPERIMENT $EXPERIMENT.bam",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "MergeBams"
                        ],
                        "error": "stringtie_err",
                        "job_name": "stringtie-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtie_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "experiment",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTie",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "echo $EXPERIMENT/$EXPERIMENT.gtf >> ../merge_list_hum.txt",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "StringTie"
                        ],
                        "error": "prepare_err",
                        "job_name": "prepare-${project_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "prepare_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:01:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "PrepareStringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie --merge -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf  -o merged_list_hum.gtf merge_list_hum.txt",
                    "conditions": [
                        {
                            "command": "[ -s merged_list_hum.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "PrepareStringTieMerge"
                        ],
                        "error": "stringtiemerge_err",
                        "job_name": "stringtiemerge-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemerge_out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G ../merged_list_hum.gtf -o $EXPERIMENT.ballgown.gtf",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "StringTieMerge"
                        ],
                        "error": "stringtiemergeEB_err",
                        "job_name": "stringtieEB-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemergeEB_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "stringtie/1.3.4"
                    ],
                    "script_level": "experiment",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieEB",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "BASEDIR=/gpfs/scratch/userexternal/tflati00/reditools2.0/\nexport PATH=$PATH:$BASEDIR\n\nmodule load python/2.7.12\nsource $BASEDIR/ENV/bin/activate\nmodule load autoload profile/global\nmodule load autoload openmpi/1-10.3--gnu--6.1.0\nmodule load autoload samtools\nmodule load autoload htslib\n\nmkdir cov\nmkdir temp\n\nextract_coverage.sh $EXPERIMENT.bam cov/ $GENOME/genome.fa.fai\n\ntime mpirun $BASEDIR/src/cineca/parallel_reditools.py -f $EXPERIMENT.bam -r $GENOME/genome.fa -G cov/$EXPERIMENT.cov -D cov/ -t temp/ -Z $GENOME/genome.fa.fai\n\nexport PATH=$HTSLIB_HOME/bin/:$PATH\ntime merge.sh temp/ $EXPERIMENT.editing $CPU",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "MergeBams"
                        ],
                        "error": "RT2_err",
                        "job_name": "RT2-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 36,
                        "nodes": 1,
                        "output": "RT2_out",
                        "queue": "gll_usr_prod",
                        "walltime": "20:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "RNAediting",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "Mus musculus",
                    "type": "Organism"
                },
                {
                    "name": "SE",
                    "type": "Layout"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to this project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                }
            ]
        },
        {
            "cluster": "galileo",
            "color": "#ff9933",
            "disabled": false,
            "id": "TransSE_Homo",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "fastq-dump $SAMPLE",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${sample_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "sra/2.8.2"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract $SAMPLE.fastq -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.trim.fastq"
                        }
                    ],
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar SE -threads 36 -phred33 $SAMPLE.fastq $SAMPLE.trim.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-SE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.trim.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${project_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract $SAMPLE.trim.fastq -o $SAMPLE/fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/hg19_UCSC/genome -U $SAMPLE.trim.fastq -S $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "hisat_err",
                        "job_name": "hisat-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "hisat_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "hisat2/2.1.0"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "samtools/1.7"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie  -v -p $cpu_variable -G $HG19_ANNOTATION/Genes/genes.gtf -o $SAMPLE.gtf -l $SAMPLE $SAMPLE.bam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "stringtie_err",
                        "job_name": "stringtie-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtie_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_homo_sapiens/hg19"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTie",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "echo $EXPERIMENT/$SAMPLE/$SAMPLE.gtf >> ../../merge_list_hum.txt",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "StringTie"
                        ],
                        "error": "prepare_err",
                        "job_name": "prepare-${project_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "prepare_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:01:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "PrepareStringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie --merge -p $cpu_variable -G $HG19_ANNOTATION/Genes/genes.gtf  -o merged_list_hum.gtf merge_list_hum.txt",
                    "conditions": [
                        {
                            "command": "[ -s merged_list_hum.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "PrepareStringTieMerge"
                        ],
                        "error": "stringtiemerge_err",
                        "job_name": "stringtiemerge-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemerge_out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "ig_homo_sapiens/hg19",
                        "stringtie/1.3.4"
                    ],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie $SAMPLE.bam -B -e -p $cpu_variable -G ../../merged_list_hum.gtf -o $SAMPLE.ballgown.gtf",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "StringTieMerge"
                        ],
                        "error": "stringtiemergeEB_err",
                        "job_name": "stringtieEB-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemergeEB_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "stringtie/1.3.4"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieEB",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "Homo sapiens",
                    "type": "Organism"
                },
                {
                    "name": "SE",
                    "type": "Layout"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to the project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                }
            ]
        },
        {
            "cluster": "galileo",
            "color": "#ffc433",
            "disabled": false,
            "id": "TransPE_Mus",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.fastq"
                        }
                    ],
                    "command_chunk_size": 10,
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "fastq-dump --split-files $SAMPLE",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "sra/2.8.2"
                    ],
                    "script_level": "experiment",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.trimmed.paired.fastq"
                        },
                        {
                            "file": "${SAMPLE}_2.trimmed.paired.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_1.fastq ${SAMPLE}_2.fastq ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE/${SAMPLE}_1.trimmed.paired.fastq ] && [ -s $SAMPLE/${SAMPLE}_2.trimmed.paired.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${sample_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/mm10/genome -1 ${SAMPLE}_1.trimmed.paired.fastq -2 ${SAMPLE}_2.trimmed.paired.fastq -U ${SAMPLE}_1.trimmed.unpaired.fastq,${SAMPLE}_2.trimmed.unpaired.fastq -S $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "hisat_err",
                        "job_name": "hisat-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "hisat_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "hisat2/2.1.0"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "samtools/1.7"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat samples); do echo \"INPUT=$s/$s.bam\"; done)",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "",
                        "job_name": "mergebams-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "picardtools/2.3.0"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "MergeBams",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie  -v -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $EXPERIMENT.gtf -l $EXPERIMENT $EXPERIMENT.bam",
                    "conditions": [
                        {
                            "command": "[ -s $EXPERIMENT.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "MergeBams"
                        ],
                        "error": "stringtie_err",
                        "job_name": "stringtie-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtie_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "experiment",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTie",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "echo $EXPERIMENT/$EXPERIMENT.gtf >> ../merge_list_hum.txt",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "StringTie"
                        ],
                        "error": "prepare_err",
                        "job_name": "prepare-${project_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "prepare_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:01:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "PrepareStringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie --merge -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf  -o merged_list_hum.gtf merge_list_hum.txt",
                    "conditions": [
                        {
                            "command": "[ -s merged_list_hum.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "PrepareStringTieMerge"
                        ],
                        "error": "stringtiemerge_err",
                        "job_name": "stringtiemerge-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemerge_out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G ../merged_list_hum.gtf -o $EXPERIMENT.ballgown.gtf",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "StringTieMerge"
                        ],
                        "error": "stringtiemergeEB_err",
                        "job_name": "stringtieEB-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemergeEB_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "stringtie/1.3.4"
                    ],
                    "script_level": "experiment",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieEB",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [],
                    "command_chunk_size": 1,
                    "command_group_level": "all",
                    "command_level": "experiment",
                    "command_parallelism_level": "sequential",
                    "commandline": "BASEDIR=/gpfs/scratch/userexternal/tflati00/reditools2.0/\nexport PATH=$PATH:$BASEDIR\n\nmodule load python/2.7.12\nsource $BASEDIR/ENV/bin/activate\nmodule load autoload profile/global\nmodule load autoload openmpi/1-10.3--gnu--6.1.0\nmodule load autoload samtools\nmodule load autoload htslib\n\nmkdir cov\nmkdir temp\n\nextract_coverage.sh $EXPERIMENT.bam cov/ $GENOME/genome.fa.fai\n\ntime mpirun $BASEDIR/src/cineca/parallel_reditools.py -f $EXPERIMENT.bam -r $GENOME/genome.fa -G cov/$EXPERIMENT.cov -D cov/ -t temp/ -Z $GENOME/genome.fa.fai\n\nexport PATH=$HTSLIB_HOME/bin/:$PATH\ntime merge.sh temp/ $EXPERIMENT.editing $CPU",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "MergeBams"
                        ],
                        "error": "RT2_err",
                        "job_name": "RT2-${experiment_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 36,
                        "nodes": 1,
                        "output": "RT2_out",
                        "queue": "gll_usr_prod",
                        "walltime": "20:00:00"
                    },
                    "hpc_directives_text": "",
                    "modules": [
                        "profile/global",
                        "ig_Mus_musculus/mm10"
                    ],
                    "script_level": "experiment",
                    "skip": false,
                    "title": "RNAediting",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "Mus musculus",
                    "type": "Organism"
                },
                {
                    "name": "PE",
                    "type": "Layout"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to this project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                }
            ]
        },
        {
            "cluster": "galileo",
            "color": "#15d75f",
            "disabled": false,
            "id": "TransPE_Rattus",
            "steps": [
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.fastq"
                        }
                    ],
                    "command_chunk_size": 10,
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "fastq-dump --split-files $SAMPLE",
                    "conditions": [
                        {
                            "command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [],
                        "error": "download_err",
                        "job_name": "download-${experiment_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "download_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "sra/2.8.2"
                    ],
                    "script_level": "experiment",
                    "sequential": false,
                    "skip": false,
                    "title": "Download",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_before"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_before",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_before ]"
                        }
                    ],
                    "description": "",
                    "description_short": "Quality control",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "fastqc_err",
                        "job_name": "fastqc_before-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_before",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "${SAMPLE}_1.trimmed.paired.fastq"
                        },
                        {
                            "file": "${SAMPLE}_2.trimmed.paired.fastq"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_1.fastq ${SAMPLE}_2.fastq ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE/${SAMPLE}_1.trimmed.paired.fastq ] && [ -s $SAMPLE/${SAMPLE}_2.trimmed.paired.fastq ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Download"
                        ],
                        "error": "trimmomatic_err",
                        "job_name": "trimming-${sample_variable}",
                        "memory": {
                            "quantity": 30,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "trimmomatic_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "trimmomatic/0.36"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Trimming",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "fastqc_after"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_after",
                    "conditions": [
                        {
                            "command": "[ -d fastqc_after ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "fastqc_after_err",
                        "job_name": "fastqc_after-${project_variable}",
                        "memory": {
                            "quantity": 10,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "fastqc_after_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:15:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "fastqc/0.11.5"
                    ],
                    "script_level": "project",
                    "sequential": false,
                    "skip": false,
                    "title": "Fastqc_after",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "checks": [
                        {
                            "file": "$SAMPLE.sam"
                        }
                    ],
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEXES/rn6/genome -1 ${SAMPLE}_1.trimmed.paired.fastq -2 ${SAMPLE}_2.trimmed.paired.fastq -U ${SAMPLE}_1.trimmed.unpaired.fastq,${SAMPLE}_2.trimmed.unpaired.fastq -S $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.sam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Trimming"
                        ],
                        "error": "hisat_err",
                        "job_name": "hisat-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "hisat_out",
                        "queue": "gll_usr_prod",
                        "walltime": "05:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": false,
                    "modules": [
                        "profile/bioinf",
                        "hisat2/2.1.0"
                    ],
                    "script_level": "sample",
                    "sequential": false,
                    "skip": false,
                    "title": "Mapping",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.bam ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Mapping"
                        ],
                        "error": "sort_err",
                        "job_name": "sort-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "sort_out",
                        "queue": "gll_usr_prod",
                        "walltime": "03:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "samtools/1.7"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "Sorting",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie  -v -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $SAMPLE.gtf -l $SAMPLE $SAMPLE.bam",
                    "conditions": [
                        {
                            "command": "[ -s $SAMPLE.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "Sorting"
                        ],
                        "error": "stringtie_err",
                        "job_name": "stringtie-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtie_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Rattus_norvegicus/rn6"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTie",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "echo $EXPERIMENT/$SAMPLE/$SAMPLE.gtf >> ../../merge_list_hum.txt",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 1,
                        "dependencies": [
                            "StringTie"
                        ],
                        "error": "prepare_err",
                        "job_name": "prepare-${project_variable}",
                        "memory": {
                            "quantity": 1,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "prepare_out",
                        "queue": "gll_usr_prod",
                        "walltime": "00:01:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "PrepareStringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "project",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie --merge -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf  -o merged_list_hum.gtf merge_list_hum.txt",
                    "conditions": [
                        {
                            "command": "[ -s merged_list_hum.gtf ]"
                        }
                    ],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "PrepareStringTieMerge"
                        ],
                        "error": "stringtiemerge_err",
                        "job_name": "stringtiemerge-${project_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemerge_out",
                        "queue": "gll_usr_prod",
                        "walltime": "10:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "profile/global",
                        "stringtie/1.3.4",
                        "ig_Rattus_norvegicus/rn6"
                    ],
                    "script_level": "project",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieMerge",
                    "type": "per-step",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                },
                {
                    "command_group_level": "all",
                    "command_level": "sample",
                    "command_parallelism_level": "sequential",
                    "commandline": "$STRINGTIE_HOME/bin/stringtie $SAMPLE.bam -B -e -p $cpu_variable -G ../../merged_list_hum.gtf -o $SAMPLE.ballgown.gtf",
                    "conditions": [],
                    "description": "",
                    "description_short": "",
                    "hpc_directives": {
                        "account": "cin_staff",
                        "cpu": 36,
                        "dependencies": [
                            "StringTieMerge"
                        ],
                        "error": "stringtiemergeEB_err",
                        "job_name": "stringtieEB-${sample_variable}",
                        "memory": {
                            "quantity": 115,
                            "size": "GB"
                        },
                        "mpi_procs": 0,
                        "nodes": 1,
                        "output": "stringtiemergeEB_out",
                        "queue": "gll_usr_prod",
                        "walltime": "02:00:00"
                    },
                    "hpc_directives_text": "",
                    "iterate": true,
                    "modules": [
                        "profile/bioinf",
                        "stringtie/1.3.4"
                    ],
                    "script_level": "sample",
                    "sequential": true,
                    "skip": false,
                    "title": "StringTieEB",
                    "type": "per-sample",
                    "write_stderr_log": true,
                    "write_stdout_log": true
                }
            ],
            "tags": [
                {
                    "name": "Rattus norvegicus",
                    "type": "Organism"
                },
                {
                    "name": "PE",
                    "type": "Layout"
                }
            ],
            "variables": [
                {
                    "description": "Variable to use across scripts to refer to a sample in this project",
                    "key": "sample_variable",
                    "key_disabled": true,
                    "value": "SAMPLE"
                },
                {
                    "description": "Variable to use across scripts to refer to ALL samples in this project",
                    "key": "all_samples_variable",
                    "key_disabled": true,
                    "value": "ALL_SAMPLES"
                },
                {
                    "description": "Variable to use across scripts to refer to this project ID",
                    "key": "project_variable",
                    "key_disabled": true,
                    "value": "PROJECT"
                },
                {
                    "description": "Variable to use across scripts to refer to the experiment ID",
                    "key": "experiment_variable",
                    "key_disabled": true,
                    "value": "EXPERIMENT"
                },
                {
                    "description": "Variable to use across scripts to refer to the index of this project",
                    "key": "project_index_variable",
                    "key_disabled": true,
                    "value": "PROJECT_INDEX"
                },
                {
                    "description": "Variable to use across scripts to refer to the number of CPU defined in a step",
                    "key": "cpu_variable",
                    "key_disabled": true,
                    "value": "CPU"
                },
                {
                    "description": "Variable to use across scripts to refer to the name of the step",
                    "key": "step_name_variable",
                    "key_disabled": true,
                    "value": "STEP_NAME"
                }
            ]
        }
    ]
}