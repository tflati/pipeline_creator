{"files": [{"url": "/data/CCLE/scripts/TranscriptomicsPipeline/configuration_splitter.py", "name": "configuration_splitter.py"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/configuration_converter.py", "name": "configuration_converter.py"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/configurator.py", "name": "configurator.py"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/create_foldchange_table.R", "name": "create_foldchange_table.R"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/create_ontology_tables.R", "name": "create_ontology_tables.R"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/produce_lists_deseq2.py", "name": "produce_lists_deseq2.py"}, {"url": "/data/CCLE/scripts/TranscriptomicsPipeline/produce_DEG_table.R", "name": "produce_DEG_table.R"}], "queue": "gll_usr_prod", "tags": [], "color": "#333fff", "username": "tflati00", "modules": ["profile/bioinf", "ig_UCSC_Homo_sapiens/hg38"], "remote_path": "/gpfs/scratch/userexternal/tflati00/TranscriptomicPipeline", "disabled": false, "cluster": "galileo", "steps": [{"command_chunk_size": 10, "script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "SE"}], "description_short": "", "commandline": "fastq-dump $SAMPLE", "title": "Download_SE", "modules": ["profile/bioinf", "sra/2.8.2", "hisat2"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": [], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "05:00:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -s $SAMPLE.fastq ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "SE"}], "description_short": "Quality control", "commandline": "mkdir fastqc_before; fastqc --nogroup --extract $SAMPLE.fastq -o fastqc_before", "title": "Fastqc_before_SE", "modules": ["profile/bioinf", "fastqc/0.11.5"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Download_SE"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -d fastqc_before ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "SE"}], "description_short": "", "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar SE -threads 36 -phred33 $SAMPLE.fastq $SAMPLE.trim.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-SE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13", "title": "Trimming_SE", "modules": ["profile/bioinf", "trimmomatic/0.36"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Download_SE"], "memory": {"size": "GB", "quantity": 30}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -s $SAMPLE.trim.fastq ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "SE"}], "description_short": "", "commandline": "mkdir fastqc_after; fastqc --nogroup --extract $SAMPLE.trim.fastq -o fastqc_after", "title": "Fastqc_after_SE", "modules": ["profile/bioinf", "fastqc/0.11.5"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Trimming_SE"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -d fastqc_after ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "SE"}], "description_short": "", "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEX/genome -U $SAMPLE.trim.fastq -S $SAMPLE.sam", "title": "Mapping_Hisat_SE", "modules": ["profile/bioinf", "hisat2/2.1.0"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Trimming_SE"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "05:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -s $SAMPLE.sam ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [], "description_short": "", "commandline": "$SAMTOOLS_HOME/bin/samtools sort -@ $cpu_variable -o $SAMPLE.bam $SAMPLE.sam", "title": "Sorting", "modules": ["profile/bioinf", "samtools/1.7"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Mapping_Hisat_SE", "Mapping_Hisat_PE"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "03:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": true, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": true, "conditions": [{"command": "[ -s $SAMPLE.bam ]"}], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"command_chunk_size": 1, "script_level": "experiment", "description": "", "tags": [], "description_short": "", "commandline": "java -Xmx2g -jar $PICARDTOOLS_HOME/bin/picard.jar MergeSamFiles OUTPUT=$EXPERIMENT.bam $(for s in $(cat $RUN_DIR/$BIOPROJECT/$EXPERIMENT/samples | cut -f 1); do echo \"INPUT=$s/$s.bam\"; done)", "title": "MergeBams", "modules": ["profile/global", "picardtools/2.3.0"], "command_level": "experiment", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Sorting"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 36, "mpi_procs": 0}, "write_stderr_log": true, "skip": true, "command_group_level": "all", "write_stdout_log": true, "conditions": [], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"skip": true, "command_level": "experiment", "overwrite": false, "begin_block": "", "hpc_directives_text": "", "title": "DeleteExperimentData", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["StringTieMerge"], "memory": {"size": "GB", "quantity": 1}, "output": "", "nodes": 1, "walltime": "00:05:00", "cpu": 1, "mpi_procs": 0}, "description_short": "", "checks": [], "end_block": "", "command_chunk_size": 1, "script_level": "experiment", "description": "", "tags": [], "commandline": "rm *sam\nrm *bam", "executable": [], "write_stdout_log": true, "conditions": [], "modules": [], "write_stderr_log": true, "command_group_level": "all", "command_parallelism_level": "sequential"}, {"script_level": "experiment", "type": "per-sample", "description": "", "tags": [], "description_short": "", "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf -o $EXPERIMENT.gtf", "title": "StringTieEB", "modules": ["profile/bioinf", "stringtie/1.3.4"], "command_level": "experiment", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["MergeBams"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": true, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": true, "conditions": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "project", "begin_block": "", "type": "per-step", "description": "", "tags": [{"type": "Organism"}], "description_short": "", "commandline": "rm \"merge_list.$ORGANISM.txt\"\n\nfor EXPERIMENT in $(cat $RUN_DIR/$BIOPROJECT/experiments | cut -f 1)\ndo\n    echo $EXPERIMENT/$EXPERIMENT.gtf >> \"merge_list.$ORGANISM.txt\"\ndone\n\n$STRINGTIE_HOME/bin/stringtie --merge -p $cpu_variable -G $ANNOTATION/Genes/genes.gtf  -o \"merged.$ORGANISM.gtf\" \"merge_list.$ORGANISM.txt\"", "title": "StringTieMerge", "modules": ["profile/bioinf", "stringtie/1.3.4"], "command_level": "project", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["MergeBams"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "10:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": true, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": true, "conditions": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "experiment", "type": "per-sample", "description": "", "tags": [], "description_short": "", "commandline": "$STRINGTIE_HOME/bin/stringtie $EXPERIMENT.bam -B -e -p $cpu_variable -G \"../merged.$ORGANISM.gtf\" -o $EXPERIMENT.merged.gtf", "title": "StringTieEB-Merged", "modules": ["profile/bioinf", "stringtie/1.3.4"], "command_level": "experiment", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["StringTieMerge"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": true, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": true, "conditions": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "PE"}], "description_short": "", "commandline": "java -jar $TRIMMOMATIC_HOME/trimmomatic-0.36.jar PE -threads 36 -phred33 ${SAMPLE}_1.fastq ${SAMPLE}_2.fastq ${SAMPLE}_1.trimmed.paired.fastq ${SAMPLE}_1.trimmed.unpaired.fastq ${SAMPLE}_2.trimmed.paired.fastq ${SAMPLE}_2.trimmed.unpaired.fastq ILLUMINACLIP:$TRIMMOMATIC_HOME/adapters/TruSeq3-PE.fa:2:30:10 SLIDINGWINDOW:4:15 MINLEN:36 HEADCROP:13", "title": "Trimming_PE", "modules": ["profile/bioinf", "trimmomatic/0.36"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Rsync manual data (PE)"], "memory": {"size": "GB", "quantity": 30}, "output": "", "nodes": 1, "walltime": "00:15:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -s $SAMPLE/${SAMPLE}_1.trimmed.paired.fastq ] && [ -s $SAMPLE/${SAMPLE}_2.trimmed.paired.fastq ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "PE"}], "description_short": "Quality control", "commandline": "mkdir fastqc_before; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_before", "title": "Fastqc_before_PE", "modules": ["profile/bioinf", "fastqc/0.11.5"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Rsync manual data (PE)"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "02:00:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -d fastqc_before ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "PE"}], "description_short": "", "commandline": "mkdir fastqc_after; fastqc --nogroup --extract ${SAMPLE}_1.fastq -o fastqc_before && fastqc --nogroup --extract ${SAMPLE}_2.fastq -o fastqc_after", "title": "Fastqc_after_PE", "modules": ["profile/bioinf", "fastqc/0.11.5"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Trimming_PE"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "00:15:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -d fastqc_after ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"script_level": "sample", "type": "per-sample", "description": "", "tags": [{"type": "Layout", "name": "PE"}], "description_short": "", "commandline": "$HISAT2_HOME/bin/hisat2 -p $cpu_variable --dta -q -x $HISAT2_INDEX/genome -1 ${SAMPLE}_1.trimmed.paired.fastq -2 ${SAMPLE}_2.trimmed.paired.fastq -U ${SAMPLE}_1.trimmed.unpaired.fastq,${SAMPLE}_2.trimmed.unpaired.fastq -S $SAMPLE.sam", "title": "Mapping_Hisat_PE", "modules": ["profile/bioinf", "hisat2/2.1.0"], "command_level": "sample", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["Trimming_PE"], "memory": {"size": "GB", "quantity": 115}, "output": "", "nodes": 1, "walltime": "05:00:00", "cpu": 36, "mpi_procs": 0}, "sequential": false, "skip": true, "write_stderr_log": true, "command_group_level": "all", "write_stdout_log": true, "iterate": false, "conditions": [{"command": "[ -s $SAMPLE.sam ]"}], "checks": [], "command_parallelism_level": "sequential", "hpc_directives_text": ""}, {"skip": true, "command_level": "project", "overwrite": false, "begin_block": "", "hpc_directives_text": "", "title": "prepareCountMatrices", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["StringTieEB"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "00:30:00", "cpu": 1, "mpi_procs": 0}, "description_short": "", "checks": [], "end_block": "", "command_chunk_size": 1, "script_level": "project", "description": "", "tags": [{"type": "Organism"}], "commandline": "if [ ! -s prepDE.py ]\nthen\n    wget http://ccb.jhu.edu/software/stringtie/dl/prepDE.py\nfi\n\nrm \"input.list.$ORGANISM.txt\"\nfor EXPERIMENT in $(cat $RUN_DIR/$BIOPROJECT/experiments | grep \"Organism:$ORGANISM\" | cut -f 1); do echo -e \"$EXPERIMENT\\t$EXPERIMENT/$EXPERIMENT.gtf\" >> \"input.list.$ORGANISM.txt\"; done\n\npython prepDE.py -i \"input.list.$ORGANISM.txt\" -g \"gene_count_matrix.$ORGANISM.csv\" -t \"transcript_count_matrix.$ORGANISM.csv\"", "executable": [], "write_stdout_log": true, "conditions": [], "modules": ["profile/global", "r/3.4.2"], "write_stderr_log": true, "command_group_level": "all", "command_parallelism_level": "sequential"}, {"skip": true, "command_level": "sample", "overwrite": false, "begin_block": "", "hpc_directives_text": "", "title": "DeleteRunData", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["MergeBams"], "memory": {"size": "GB", "quantity": 1}, "output": "", "nodes": 1, "walltime": "00:05:00", "cpu": 1, "mpi_procs": 0}, "description_short": "", "checks": [], "end_block": "", "command_chunk_size": 1, "script_level": "sample", "description": "", "tags": [], "commandline": "rm *fastq\n    rm *fq\n    rm *bam\n    rm *sam", "executable": [], "write_stdout_log": true, "conditions": [], "modules": [], "write_stderr_log": true, "command_group_level": "all", "command_parallelism_level": "sequential"}, {"skip": true, "command_level": "sample", "begin_block": "", "hpc_directives_text": "", "title": "Rsync manual data (PE)", "hpc_directives": {"account": "cin_staff", "error": "import_err", "job_name": "import", "queue": "gll_usr_prod", "dependencies": [], "memory": {"size": "GB", "quantity": 5}, "output": "import_out", "nodes": 1, "walltime": "10:00:00", "cpu": 1, "mpi_procs": 0}, "sequential": false, "type": "per-sample", "checks": [], "command_chunk_size": 10, "script_level": "sample", "description": "", "tags": [], "commandline": "rsync ${PATHS[0]} ${SAMPLE}_1.fastq\nrsync ${PATHS[1]} ${SAMPLE}_2.fastq", "conditions": [{"command": "[ -s ${SAMPLE}_1.fastq ] && [ -s ${SAMPLE}_2.fastq ]"}], "iterate": false, "write_stdout_log": true, "description_short": "", "modules": [], "write_stderr_log": true, "command_group_level": "all", "command_parallelism_level": "sequential"}, {"executables": [], "skip": false, "command_level": "top", "overwrite": false, "begin_block": "", "hpc_directives_text": "", "title": "produceDEGs", "hpc_directives": {"account": "elix3_negri", "error": "", "job_name": "", "queue": "gll_usr_prod", "dependencies": ["prepareCountMatrices"], "memory": {"size": "GB", "quantity": 10}, "output": "", "nodes": 1, "walltime": "24:00:00", "cpu": 1, "mpi_procs": 0}, "description_short": "", "checks": [], "end_block": "", "command_chunk_size": 1, "script_level": "top", "description": "", "tags": [], "commandline": "INPUT_FILE=$(realpath \"$FILE_DIR/phenodata.xlsx\")\nCONVERTED_INPUT_FILE=$(realpath \"$FILE_DIR/phenodata.converted.xlsx\")\nDATASET_FILE=$(realpath \"$FILE_DIR/dataset.xlsx\")\nOUTPUT_DIR=$(realpath \"degs/\")\nCOMBINATION_FILE=$OUTPUT_DIR\"subsets.txt\"\n\nCOVARIATE=\"Stress.protocol\"\nCOLUMNS_TO_SKIP=\"ids,Estrus,Age.w,Replicate,ids,Note,Stress_added_T\"\nSHEETS_TO_SKIP=\"PRJNA392171,PRJNA341670,Codici\"\nTO_SKIP=\"Estrus,Age.w,Replicate,ids,Note,Stress_added_T\"\nCOLUMNS_2_VALUES=\"Time.from.stress.h,Phenotype,Treatment.2\"\nCOLUMNS_NOT_TO_MERGE=\"Time.from.stress.h,Region,Phenotype,Treatment.2,Sex\"\n\nORGANISM_NAME=\"Mus musculus\"\nORGANISM_DB=\"org.Mm.eg.db\"\n\ncd $SCRIPT_DIR\n\nvirtualenv ENV\nsource ENV/bin/activate\npip install openpyxl\n\n# Convert the configuration file\npython3 configuration_converter.py $INPUT_FILE $CONVERTED_INPUT_FILE $DATASET_FILE $SHEETS_TO_SKIP\n\n# Generate the configurations\npython3 configurator.py $CONVERTED_INPUT_FILE $COVARIATE $COLUMNS_TO_SKIP $TO_SKIP $COLUMNS_2_VALUES $COLUMNS_NOT_TO_MERGE > $COMBINATION_FILE\n\n# Split the phenodata into directories\npython3.5 configuration_splitter.py $CONVERTED_INPUT_FILE $BASE_DIR $SHEETS_TO_SKIP\n\n# Produce the configurations for all the bioprojects\npython produce_lists_deseq2.py -n \"control\" -f $COMBINATION_FILE -i $BASE_DIR -o $OUTPUT_DIR -m $ORGANISM_NAME -d $ORGANISM_DB\n\ndeactivate", "executable": [], "write_stdout_log": true, "conditions": [], "modules": ["profile/global", "r/3.4.2", "python/3.5.2"], "write_stderr_log": true, "command_group_level": "all", "command_parallelism_level": "sequential"}], "variables": [{"value": "SAMPLE", "key_disabled": true, "description": "Variable to use across scripts to refer to a sample in this project", "key": "sample_variable"}, {"value": "ALL_SAMPLES", "key_disabled": true, "description": "Variable to use across scripts to refer to ALL samples in this project", "key": "all_samples_variable"}, {"value": "PROJECT", "key_disabled": true, "description": "Variable to use across scripts to refer to this project ID", "key": "project_variable"}, {"value": "EXPERIMENT", "key_disabled": true, "description": "Variable to use across scripts to refer to the experiment ID", "key": "experiment_variable"}, {"value": "PROJECT_INDEX", "key_disabled": true, "description": "Variable to use across scripts to refer to the index of this project", "key": "project_index_variable"}, {"value": "CPU", "key_disabled": true, "description": "Variable to use across scripts to refer to the number of CPU defined in a step", "key": "cpu_variable"}, {"value": "STEP_NAME", "key_disabled": true, "description": "Variable to use across scripts to refer to the name of the step", "key": "step_name_variable"}], "id": "TranscriptomicsPipeline"}